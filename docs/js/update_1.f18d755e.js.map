{"version":3,"sources":["webpack:///./src/components/Animation.js","webpack:///./src/views/Update_1.vue?130d","webpack:///./src/components/DynamicFramework.vue?7a54","webpack:///src/components/DynamicFramework.vue","webpack:///./src/components/DynamicFramework.vue?9606","webpack:///./src/components/DynamicFramework.vue","webpack:///src/views/Update_1.vue","webpack:///./src/views/Update_1.vue?332e","webpack:///./src/views/Update_1.vue","webpack:///./src/views/Update_1.vue?7a8b","webpack:///./src/assets/model_1.svg"],"names":["Animation","keyframeInput","this","parseKeyframes","isPlaying","hasEnded","timeline","frameIndex","input","lines","split","frames","console","log","i","length","ln","push","start","parseFloat","isEnd","x","y","z","xa","ya","za","theta","thetaRad","Math","PI","dt","playing","currentFrame","newDetails","computeFrameDetails","frame","rotQuat","THREE","setFromAxisAngle","normalize","pos","rot","translation_lerp","rotation_slerp","frame_1","frame_2","u","lerp_find_u","quat_1","quat_2","slerp","dot","set","w","acos","sin_theta","sin","left","right","q1v","toArray","multiplyScalar","q2v","add","lerp","render","_vm","_h","$createElement","_c","_self","_v","_m","staticRenderFns","staticStyle","staticClass","attrs","on","$event","loadAnimation","directives","name","rawName","value","expression","domProps","target","composing","animationInput","data","camera","scene","renderer","mesh","sceneObjects","originTime","lastFrameTime","endTime","isPaused","methods","init_threejs","position","rotateY","setupScene","setSize","threeJsDiv","clientWidth","clientHeight","performance","now","appendChild","domElement","SceneEntity","updateScene","animationLoop","requestAnimationFrame","newTime","setAnimation","restart","togglePause","mounted","component","components","DynamicFramework","module","exports"],"mappings":"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","file":"js/update_1.f18d755e.js","sourcesContent":["import * as THREE from 'three';\r\n\r\nexport default class Animation {\r\n  constructor(keyframeInput) {\r\n    // Let's assume we've received a string of lines representing keyframes\r\n    this.parseKeyframes(keyframeInput);\r\n\r\n    // Have an initial state: we're not playing, and our timeline is at 0 seconds\r\n    this.isPlaying = false;\r\n    this.hasEnded = false;\r\n    this.timeline = 0.0;\r\n    this.frameIndex = 0;\r\n  }\r\n\r\n  parseKeyframes(input) {\r\n    // Split lines - t x y z xa ya za theta\r\n    let lines = input.split(\"\\n\");\r\n    this.frames = [];\r\n    console.log(lines);\r\n\r\n    // Go through and create frame objects\r\n    for(let i = 0; i < lines.length; i++) {\r\n      let ln = lines[i].split(/\\s+/);\r\n      \r\n\r\n      if(ln.length >= 8) {\r\n        this.frames.push({\r\n          start: parseFloat(ln[0]) * 1000.0, isEnd: (i == lines.length - 1),\r\n          x:  parseFloat(ln[1]),  y: parseFloat(ln[2]),  z: parseFloat(ln[3]),\r\n          xa: parseFloat(ln[4]), ya: parseFloat(ln[5]), za: parseFloat(ln[6]), \r\n          theta: parseFloat(ln[7]), thetaRad: parseFloat(ln[7]) * (Math.PI / 180)\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  playing() {\r\n    return this.isPlaying && !this.hasEnded;\r\n  }\r\n\r\n  restart() {\r\n    this.isPlaying = false;\r\n    this.timeline = 0.0;\r\n    this.frameIndex = 0;\r\n    this.hasEnded = false;\r\n  }\r\n\r\n  play() {\r\n    if(!this.hasEnded) {\r\n      this.isPlaying = true;\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    this.isPlaying = false;\r\n  }\r\n\r\n  // Given the time in milliseconds, compute the next position/rotation of the object\r\n  getFrame(dt) {\r\n    if(this.playing()) {\r\n      // Get the new time\r\n      let oldTime = this.timeline;\r\n      this.timeline += dt;\r\n\r\n      // Determine the current frame, and calculate the new position/rotation\r\n      let currentFrame = this.frames[this.frameIndex];\r\n      while( !currentFrame.isEnd && (this.timeline >= this.frames[this.frameIndex + 1].start) ) {\r\n        currentFrame = this.frames[++this.frameIndex];\r\n      }\r\n\r\n      let newDetails = this.computeFrameDetails(currentFrame);\r\n\r\n      // Determine if the animation is complete\r\n      if(currentFrame.isEnd) {\r\n        // If complete, this.isPlaying = false and this.hasEnded = true\r\n        this.isPlaying = false;\r\n        this.hasEnded = true;\r\n        this.timeline = currentFrame.start;\r\n      }\r\n        \r\n\r\n      // Return the updated position/rotation\r\n      return newDetails;\r\n\r\n    } \r\n    else {\r\n      return { };\r\n    }\r\n  }\r\n\r\n  // Calculate the rotation/position of the object at some frame and time\r\n  computeFrameDetails(frame) {\r\n    // Edge case - If this is the last frame, or if we're exactly at that frame reference, just return that!\r\n    if(frame.isEnd || this.timeline == frame.start) {\r\n      let rotQuat = new THREE.Quaternion();\r\n      rotQuat.setFromAxisAngle( new THREE.Vector3(frame.xa, frame.ya, frame.za).normalize(), frame.thetaRad);\r\n\r\n      return { pos: {x: frame.x, y: frame.y, z: frame.z},\r\n        rot: rotQuat\r\n      };\r\n    }\r\n    else {\r\n      // Translation - \r\n      let pos = this.translation_lerp(frame, this.frames[this.frameIndex + 1]);\r\n\r\n      // Rotation\r\n      let rotQuat = this.rotation_slerp(frame, this.frames[this.frameIndex + 1]);\r\n\r\n      // let rotQuat = new THREE.Quaternion();\r\n      // rotQuat.setFromAxisAngle( new THREE.Vector3(frame.xa, frame.ya, frame.za).normalize(), frame.thetaRad);\r\n\r\n      // let rotQuat = this.alt_slerp(frame, this.frames[this.frameIndex + 1]);\r\n      // console.log(`A: ${rotQuat.toArray().toString()}\\nB: ${meh.toArray().toString()}`);\r\n\r\n\r\n      return { pos: pos, rot: rotQuat };\r\n    }\r\n    \r\n  }\r\n\r\n  alt_slerp(frame_1, frame_2) {\r\n    let u = this.lerp_find_u(frame_1.start, frame_2.start, this.timeline);\r\n    let quat_1 = new THREE.Quaternion(), quat_2 = new THREE.Quaternion();\r\n    quat_1.setFromAxisAngle( new THREE.Vector3(frame_1.xa, frame_1.ya, frame_1.za).normalize(), frame_1.thetaRad );\r\n    quat_2.setFromAxisAngle( new THREE.Vector3(frame_2.xa, frame_2.ya, frame_2.za).normalize(), frame_2.thetaRad );\r\n\r\n    return quat_1.slerp(quat_2, u);\r\n  }\r\n\r\n  rotation_slerp(frame_1, frame_2) {\r\n    // Find the amount by which to rotate the angle\r\n    let u = this.lerp_find_u(frame_1.start, frame_2.start, this.timeline);\r\n\r\n    // Set up our quaternions\r\n    let quat_1 = new THREE.Quaternion(), quat_2 = new THREE.Quaternion();\r\n    quat_1.setFromAxisAngle( new THREE.Vector3(frame_1.xa, frame_1.ya, frame_1.za).normalize(), frame_1.thetaRad );\r\n    quat_2.setFromAxisAngle( new THREE.Vector3(frame_2.xa, frame_2.ya, frame_2.za).normalize(), frame_2.thetaRad );\r\n    quat_1.normalize();\r\n    quat_2.normalize();\r\n\r\n    // Take the dot product to find theta between the quaternions. Reverse if necessary\r\n    let dot = quat_1.dot(quat_2);\r\n    if(dot <= 0.0) { \r\n      quat_1.set(-quat_1.x, -quat_1.y, -quat_1.z, -quat_1.w);\r\n      dot = -dot;\r\n    }\r\n\r\n    // Equation: q1 * ( sin(1-u * theta) / sin(theta))     +      q2 * (sin(u * theta) / sin(theta))\r\n    \r\n    // Find theta\r\n    let theta = Math.acos(dot);\r\n    let sin_theta = Math.sin(theta);\r\n\r\n    // Calculate the left and right sides without the quaternions\r\n    let left = Math.sin((1.0 - u) * theta) / sin_theta;\r\n    let right = Math.sin(u * theta) / sin_theta;\r\n\r\n    // Combine with quaternions, and return\r\n    let q1v = new THREE.Vector4( ...quat_1.toArray());\r\n    q1v.multiplyScalar(left);\r\n    let q2v = new THREE.Vector4( ...quat_2.toArray());\r\n    q2v.multiplyScalar(right);\r\n    return new THREE.Quaternion( ...(q1v.add(q2v)).toArray() );\r\n  }\r\n\r\n  translation_lerp(frame_1, frame_2) {\r\n    // Interpolate x/y/z linearly\r\n    let u = this.lerp_find_u(frame_1.start, frame_2.start, this.timeline);\r\n\r\n    // console.log(`${u} from ${frame_1.start}, ${frame_2.start}, ${this.timeline}`);\r\n    return { x: this.lerp(frame_1.x, frame_2.x, u), y: this.lerp(frame_1.y, frame_2.y, u), z: this.lerp(frame_1.z, frame_2.z, u) }\r\n  }\r\n\r\n  lerp(x, y, u) {\r\n    return x + (u * (y - x));\r\n  }\r\n\r\n  lerp_find_u(x, y, z) {\r\n    return (z - x) / (y - x);\r\n  }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"Assignment 1 - Keyframing\")]),_c('h2',[_vm._v(\"Results\")]),_c('DynamicFramework'),_c('h2',[_vm._v(\"Summary\")]),_vm._m(0),_vm._m(1)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('div',{staticClass:\"update-text\"},[_vm._v(\" A simple keyframed animation. I ended up handling the interpolation of translation/rotation in addition to actually\\n      setting up the keyframing for entities. While the classes/structures aren't fully fleshed out, I came up with a simple domain-ish model before\\n      getting started. I'd like to extract the work I've done out into its own well designed subsystem at some point, but I'm waiting until a later\\n      assignment so that I can get a better idea of how to structure things with different types of animation (physics, keyframing etc...)\\n    \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('img',{staticStyle:{\"max-width\":\"600px\",\"width\":\"100%\",\"display\":\"block\",\"margin\":\"auto\"},attrs:{\"src\":require(\"../assets/model_1.svg\")}})])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"width\":\"500px\",\"height\":\"500px\",\"margin\":\"auto\"},attrs:{\"id\":\"three-js-div\"}}),_c('button',{staticStyle:{\"margin\":\"10px auto\"},on:{\"click\":function($event){return _vm.loadAnimation()}}},[_vm._v(\"Load Animation\")]),_c('div',[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.animationInput),expression:\"animationInput\"}],staticStyle:{\"width\":\"300px\",\"height\":\"190px\"},domProps:{\"value\":(_vm.animationInput)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.animationInput=$event.target.value}}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div id=\"three-js-div\" style=\"width: 500px; height: 500px; margin: auto;\"></div>\r\n    <button @click=\"loadAnimation()\" style=\"margin: 10px auto\">Load Animation</button>\r\n    <div><textarea v-model=\"animationInput\" style=\"width: 300px; height: 190px;\"></textarea></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three';\r\nimport SceneEntity from './SceneEntity.js';\r\nimport Animation from './Animation.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Three.js Components\r\n      camera: null,\r\n      scene: null,\r\n      renderer: null,\r\n      mesh: null,\r\n      sceneObjects: [],\r\n\r\n      // UI Stuff\r\n      animationInput: \"0.0  0.0 0.0 0.0 1.0 1.0 -1.0 0.0\\n1.0  4.0 0.0 0.0 1.0 1.0 -1.0 30.0\\n2.0  8.0 0.0 0.0 1.0 1.0 -1.0 90.0\\n3.0  12.0 12.0 12.0 1.0 1.0 -1.0 180.0\\n4.0  12.0 18.0 18.0 1.0 1.0 -1.0 270.0\\n5.0  18.0 18.0 18.0 0.0 1.0 0.0 90.0\\n6.0  18.0 18.0 18.0 0.0 0.0 1.0 90.0\\n7.0  25.0 12.0 12.0 1.0 0.0 0.0 0.0\\n8.0  25.0 0.0 18.0 1.0 0.0 0.0 0.0\\n9.0 25.0 1.0 18.0 1.0 0.0 0.0 0.0\",\r\n\r\n      // Timeline details\r\n      originTime: 0,\r\n      lastFrameTime: 0,   // Milliseconds\r\n      endTime: 20 * 1000, // Milliseconds\r\n      isPaused: false\r\n      \r\n      // A three.js clock for maintaining our timeline details!\r\n    };\r\n  },\r\n  methods: {\r\n    init_threejs() {\r\n      // Get a reference to the DOM that the renderer will be added to\r\n      const threeJsDiv = document.getElementById(\"three-js-div\");\r\n\r\n      // Setup the camera and scene\r\n      this.scene = new THREE.Scene();\r\n\r\n      // this.camera = new THREE.PerspectiveCamera(75, threeJsDiv.clientWidth / threeJsDiv.clientHeight, 0.01, 10);\r\n      this.camera = new THREE.PerspectiveCamera(75, threeJsDiv.clientWidth / threeJsDiv.clientHeight, 5, 1000);\r\n      this.camera.position.z = -30;\r\n      this.camera.rotateY(Math.PI);\r\n\r\n      // Setup the scene\r\n      this.setupScene();\r\n\r\n      // Set up the renderer\r\n      this.renderer = new THREE.WebGLRenderer({antialias: true});\r\n      this.renderer.setSize(threeJsDiv.clientWidth, threeJsDiv.clientHeight);\r\n\r\n      // Initialize the timeline\r\n      this.originTime = performance.now();\r\n      this.lastFrameTime = this.originTime;\r\n\r\n      // Finally, add the renderer to the DOM\r\n      threeJsDiv.appendChild(this.renderer.domElement);\r\n    },\r\n    setupScene() {\r\n      // Create a simple mesh to add to our scene!\r\n      let geometry = new THREE.BoxGeometry(5,5,5);\r\n      let material = new THREE.MeshNormalMaterial();\r\n      let simpleMesh = new THREE.Mesh(geometry, material);\r\n\r\n      // Add a simple cube to the scene\r\n      let testCube = new SceneEntity(simpleMesh);\r\n      this.sceneObjects.push(new SceneEntity(simpleMesh));\r\n\r\n      // Add everything to the scene\r\n      for(let sceneObj of this.sceneObjects) {\r\n        this.scene.add(sceneObj.mesh);\r\n      }\r\n    },\r\n    updateScene(dt) {\r\n      // // Let's also convert DT to seconds for now\r\n      // let dtInSeconds = dt * 0.001;\r\n\r\n      // Update each object\r\n      for(let sObj of this.sceneObjects) {\r\n        sObj.update(dt);\r\n      }\r\n    },\r\n    animationLoop(newTime) {\r\n      // Hook for threejs to call this method again\r\n      requestAnimationFrame(this.animationLoop);\r\n\r\n      // Update the scene\r\n      let dt = (newTime - this.originTime);\r\n      this.originTime = newTime;\r\n      this.updateScene(dt);\r\n\r\n      // Finally, render the updated scene\r\n      this.renderer.render(this.scene, this.camera);\r\n    },\r\n    loadAnimation() {\r\n      // Create a new animation, add it to the only cube in our scene\r\n      this.sceneObjects[0].setAnimation(new Animation(this.animationInput));\r\n    },\r\n    restart() {\r\n\r\n    },\r\n    togglePause() {\r\n      this.isPaused = !this.isPaused;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init_threejs();\r\n    this.animationLoop();\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DynamicFramework.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DynamicFramework.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DynamicFramework.vue?vue&type=template&id=313fb874&\"\nimport script from \"./DynamicFramework.vue?vue&type=script&lang=js&\"\nexport * from \"./DynamicFramework.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div>\r\n    <h1>Assignment 1 - Keyframing</h1>\r\n    <h2>Results</h2>\r\n    <DynamicFramework/>\r\n\r\n    <h2>Summary</h2>\r\n    <div style=\"text-align: left;\">\r\n      <div class=\"update-text\"> A simple keyframed animation. I ended up handling the interpolation of translation/rotation in addition to actually\r\n        setting up the keyframing for entities. While the classes/structures aren't fully fleshed out, I came up with a simple domain-ish model before\r\n        getting started. I'd like to extract the work I've done out into its own well designed subsystem at some point, but I'm waiting until a later\r\n        assignment so that I can get a better idea of how to structure things with different types of animation (physics, keyframing etc...)\r\n      </div>\r\n    </div>\r\n    <div style=\"text-align: left;\">\r\n      <img src=\"../assets/model_1.svg\" style=\"max-width: 600px; width: 100%; display: block; margin: auto\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DynamicFramework from '../components/DynamicFramework';\r\n\r\nexport default {\r\n  components: {\r\n    DynamicFramework\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.update-text {\r\n  max-width: 1000px;\r\n  margin: 10px auto;\r\n}\r\n\r\n@media only screen and (max-width: 950px) {\r\n  .update-text {\r\n    max-width: 100%;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update_1.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update_1.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Update_1.vue?vue&type=template&id=d8a32866&\"\nimport script from \"./Update_1.vue?vue&type=script&lang=js&\"\nexport * from \"./Update_1.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Update_1.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update_1.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update_1.vue?vue&type=style&index=0&lang=css&\"","module.exports = __webpack_public_path__ + \"img/model_1.59cd0224.svg\";"],"sourceRoot":""}