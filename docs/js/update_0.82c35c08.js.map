{"version":3,"sources":["webpack:///./src/views/Update_0.vue?4af0","webpack:///./src/components/AnimationFramework.vue?6153","webpack:///src/components/AnimationFramework.vue","webpack:///./src/components/AnimationFramework.vue?5e72","webpack:///./src/components/AnimationFramework.vue","webpack:///src/views/Update_0.vue","webpack:///./src/views/Update_0.vue?0874","webpack:///./src/views/Update_0.vue","webpack:///./src/views/Update_0.vue?91d3"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","_m","staticRenderFns","staticStyle","staticClass","attrs","_s","toFixed","on","$event","restart","data","camera","scene","renderer","mesh","sceneObjects","originTime","lastFrameTime","endTime","isPaused","methods","init_threejs","position","z","setupScene","setSize","threeJsDiv","clientWidth","clientHeight","performance","now","appendChild","domElement","simpleMesh","Math","PI","push","meshDetails","updateScene","animationLoop","requestAnimationFrame","dt","mounted","component","components","AnimationFramework"],"mappings":"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","file":"js/update_0.82c35c08.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"Assignment 0 - Animation Framework\")]),_c('h2',[_vm._v(\"Results\")]),_c('AnimationFramework'),_c('h2',[_vm._v(\"Summary\")]),_vm._m(0)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('div',{staticClass:\"update-text\"},[_vm._v(\"The framework itself is fairly simple, and will need some additional work to be extensible to more complex scenes and controls.\\n      A rudimentary system for restarting the animation has been implemented, and a basic object notation exists such that objects move at\\n      a constant rate for the duration of the animation. This isn't suitable for anything like keyframing or motion tweening, but the groundwork\\n      for updating each object at a given timestamp of the animation exists so it should be fairly simple to extend that functionality.\\n    \")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"width\":\"500px\",\"height\":\"500px\",\"margin\":\"auto\"},attrs:{\"id\":\"three-js-div\"}}),_c('div',[_vm._v(\"Some details:\")]),_c('div',[_vm._v(\"Current time: \"+_vm._s(( (_vm.lastFrameTime) * 0.001).toFixed(2)))]),_c('button',{on:{\"click\":function($event){return _vm.restart()}}},[_vm._v(\"Reset\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div id=\"three-js-div\" style=\"width: 500px; height: 500px; margin: auto;\"></div>\r\n    <div>Some details:</div>\r\n    <div>Current time: {{( (lastFrameTime) * 0.001).toFixed(2)}}</div>\r\n    <button @click=\"restart()\">Reset</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Three.js Components\r\n      camera: null,\r\n      scene: null,\r\n      renderer: null,\r\n      mesh: null,\r\n      sceneObjects: [],\r\n\r\n      // Timeline details\r\n      originTime: 0,\r\n      lastFrameTime: 0,   // Milliseconds\r\n      endTime: 20 * 1000, // Milliseconds\r\n      isPaused: false\r\n      \r\n      // A three.js clock for maintaining our timeline details!\r\n    };\r\n  },\r\n  methods: {\r\n    init_threejs() {\r\n      // Get a reference to the DOM that the renderer will be added to\r\n      const threeJsDiv = document.getElementById(\"three-js-div\");\r\n\r\n      // Setup the camera and scene\r\n      this.scene = new THREE.Scene();\r\n\r\n      // this.camera = new THREE.PerspectiveCamera(75, threeJsDiv.clientWidth / threeJsDiv.clientHeight, 0.01, 10);\r\n      this.camera = new THREE.PerspectiveCamera(75, threeJsDiv.clientWidth / threeJsDiv.clientHeight, 5, 1000);\r\n      this.camera.position.z = 200;\r\n\r\n      // Setup the scene\r\n      this.setupScene();\r\n                // // Setup some simple geometry stuff\r\n                // let geometry = new THREE.BoxGeometry(0.2, 0.2, 0.2);\r\n                // let material = new THREE.MeshNormalMaterial();\r\n\r\n                // this.mesh = new THREE.Mesh(geometry, material);\r\n\r\n                // // Add objects to the scene\r\n                // this.scene.add(this.mesh);\r\n\r\n      // Set up the renderer\r\n      this.renderer = new THREE.WebGLRenderer({antialias: true});\r\n      this.renderer.setSize(threeJsDiv.clientWidth, threeJsDiv.clientHeight);\r\n\r\n      // Initialize the timeline\r\n      this.originTime = performance.now();\r\n      this.lastFrameTime = this.originTime;\r\n\r\n      // Finally, add the renderer to the DOM\r\n      threeJsDiv.appendChild(this.renderer.domElement);\r\n    },\r\n    setupScene() {\r\n      // Create a simple mesh to add to our scene!\r\n      let geometry = new THREE.BoxGeometry(30,30,30);\r\n      let material = new THREE.MeshNormalMaterial();\r\n      let simpleMesh = new THREE.Mesh(geometry, material);\r\n      // this.mesh = new THREE.Mesh(geometry, material);\r\n\r\n      // Now, parameterize its animation\r\n      let meshDetails = {\r\n        'mesh': simpleMesh,\r\n        'anim': {\r\n          'x': 5,  // How much it changes from its base value in a given second\r\n          'y': 5,\r\n          'z': 0,\r\n          'rX': 0,\r\n          'rY': 18 * Math.PI / 180,\r\n          'rZ': 0,\r\n        }\r\n      };\r\n\r\n      // Track this mesh and its animation\r\n      this.sceneObjects.push(meshDetails);\r\n\r\n      // Add everything to the scene\r\n      for(let sceneObj of this.sceneObjects) {\r\n        this.scene.add(sceneObj.mesh);\r\n      }\r\n    },\r\n    updateScene(dt) {\r\n      // Let's also convert DT to seconds for now\r\n      let dtInSeconds = dt * 0.001;\r\n\r\n      // Update each object\r\n      for(let sObj of this.sceneObjects) {\r\n        // Update position\r\n        // sObj.mesh.translateX(dtInSeconds * sObj.anim.x);\r\n        // sObj.mesh.translateY(dtInSeconds * sObj.anim.y);\r\n        // sObj.mesh.translateZ(dtInSeconds * sObj.anim.z);\r\n        \r\n        sObj.mesh.position.x += (dtInSeconds * sObj.anim.x) || 0;\r\n        sObj.mesh.position.y += (dtInSeconds * sObj.anim.y) || 0;\r\n        sObj.mesh.position.z += (dtInSeconds * sObj.anim.z) || 0;\r\n\r\n        // Update rotation\r\n        sObj.mesh.rotation.x += (dtInSeconds * sObj.anim.rX) || 0;\r\n        sObj.mesh.rotation.y += (dtInSeconds * sObj.anim.rY) || 0;\r\n        sObj.mesh.rotation.z += (dtInSeconds * sObj.anim.rZ) || 0;\r\n      }\r\n    },\r\n    animationLoop(newTime) {\r\n      // requestAnimationFrame(this.animationLoop);\r\n      // this.mesh.rotation.x += 0.01;\r\n      // this.mesh.rotation.y += 0.02;\r\n      // this.renderer.render(this.scene, this.camera);\r\n\r\n      // Hook for threejs to call this method again\r\n      requestAnimationFrame(this.animationLoop);\r\n\r\n      if(!this.isPaused) {\r\n          //// TIMELINE STUFF - Could be moved to its own method, probably!\r\n          // Calculate delta time\r\n          let dt = (newTime - this.originTime) - this.lastFrameTime;\r\n\r\n          // If we need to pause\r\n          if((newTime - this.originTime) >= this.endTime) {\r\n            this.isPaused = true;\r\n\r\n            // Re-calculate dt such that we limit last frame time to the end of the timeline\r\n            dt = this.endTime - this.lastFrameTime;\r\n            this.lastFrameTime = this.endTime;\r\n          }\r\n          else {\r\n            this.lastFrameTime = (newTime - this.originTime);\r\n          }\r\n          ////\r\n\r\n        // Update the scene\r\n        this.updateScene(dt);\r\n      }\r\n\r\n      // Finally, render the updated scene\r\n      this.renderer.render(this.scene, this.camera);\r\n    },\r\n    restart() {\r\n      // Restart the timeline\r\n      this.originTime = performance.now();\r\n      this.lastFrameTime = 0;\r\n      this.isPaused = false;\r\n\r\n      // Reset objects - Should really make this behave with any starting position / scene description\r\n      for(let sceneObj of this.sceneObjects) {\r\n        sceneObj.mesh.position.x = 0;\r\n        sceneObj.mesh.position.y = 0;\r\n        sceneObj.mesh.position.z = 0;\r\n\r\n        sceneObj.mesh.rotation.x = 0;\r\n        sceneObj.mesh.rotation.y = 0;\r\n        sceneObj.mesh.rotation.z = 0;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.init_threejs();\r\n    this.animationLoop();\r\n  }\r\n};\r\n</script>\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnimationFramework.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnimationFramework.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AnimationFramework.vue?vue&type=template&id=f21c7d44&\"\nimport script from \"./AnimationFramework.vue?vue&type=script&lang=js&\"\nexport * from \"./AnimationFramework.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div>\r\n    <h1>Assignment 0 - Animation Framework</h1>\r\n    <h2>Results</h2>\r\n    <AnimationFramework/>\r\n\r\n    <h2>Summary</h2>\r\n    <div style=\"text-align: left;\">\r\n      <div class=\"update-text\">The framework itself is fairly simple, and will need some additional work to be extensible to more complex scenes and controls.\r\n        A rudimentary system for restarting the animation has been implemented, and a basic object notation exists such that objects move at\r\n        a constant rate for the duration of the animation. This isn't suitable for anything like keyframing or motion tweening, but the groundwork\r\n        for updating each object at a given timestamp of the animation exists so it should be fairly simple to extend that functionality.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AnimationFramework from '../components/AnimationFramework';\r\n\r\nexport default {\r\n  components: {\r\n    AnimationFramework\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.update-text {\r\n  max-width: 1000px;\r\n  margin: auto;\r\n}\r\n\r\n@media only screen and (max-width: 950px) {\r\n  .update-text {\r\n    max-width: 100%;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update_0.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update_0.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Update_0.vue?vue&type=template&id=795e514a&\"\nimport script from \"./Update_0.vue?vue&type=script&lang=js&\"\nexport * from \"./Update_0.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Update_0.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update_0.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update_0.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}